// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGFP.Infra.DAO.DbContexto;

namespace SGFP.Infra.Migrations
{
    [DbContext(typeof(DbContexto))]
    [Migration("20181219052250_mapEntidades")]
    partial class mapEntidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGFP.Domain.Entidades.Avaliacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Nota")
                        .HasColumnName("NOTA")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnName("TEXTO")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("SGFP_001_AVALIACAO");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Base.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo")
                        .HasColumnName("FLAG_ATIVO")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasColumnType("varchar(17)");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<Guid?>("EmailId");

                    b.Property<Guid?>("EnderecoId");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnName("PRIMEIRO_NOME")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnName("RG")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Sexo")
                        .HasColumnName("SEXO")
                        .HasColumnType("int");

                    b.Property<Guid?>("TelefoneId");

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasColumnName("ULTIMO_NOME")
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.HasIndex("EmailId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("Pessoa");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Carro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AnoFabricao")
                        .HasColumnName("ANO_FABRICAO")
                        .HasColumnType("datetime");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasColumnName("CHASSI")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnName("COR")
                        .HasColumnType("varchar(12)");

                    b.Property<Guid?>("DonoId");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnName("MARCA")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnName("MODELO")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnName("PLACA")
                        .HasColumnType("varchar(8)");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.HasIndex("DonoId");

                    b.ToTable("SGFP_002_CARRO");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("EstadoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(35)");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.HasIndex("EstadoId");

                    b.ToTable("SGFP_003_CIDADE");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("SGFP_005_DOCUMENTO");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnName("ENDERECO")
                        .HasColumnType("varchar(35)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("SENHA")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("SGFP_006_EMAIL");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Andress")
                        .IsRequired()
                        .HasColumnName("ENDERECO")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CEP")
                        .HasColumnName("CEP")
                        .HasColumnType("varchar(8)");

                    b.Property<Guid?>("CidadeId");

                    b.Property<string>("Complemento")
                        .HasColumnName("COMPLEMENTO")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnName("MUNICIPIO")
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.HasIndex("CidadeId");

                    b.ToTable("SGFP_007_ENDERECO");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<Guid?>("PaisId");

                    b.Property<string>("Sigla");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Pais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<string>("Sigla");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Telefone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DDD");

                    b.Property<string>("Numero");

                    b.Property<int>("TipoTelefone");

                    b.HasKey("Id");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Cliente", b =>
                {
                    b.HasBaseType("SGFP.Domain.Entidades.Base.Pessoa");

                    b.Property<Guid?>("AvaliacaoId");

                    b.Property<Guid?>("CarroId");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("CarroId");

                    b.ToTable("SGFP_004_CLIENTE");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Base.Pessoa", b =>
                {
                    b.HasOne("SGFP.Domain.Entidades.Email", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");

                    b.HasOne("SGFP.Domain.Entidades.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.HasOne("SGFP.Domain.Entidades.Telefone", "Telefone")
                        .WithMany()
                        .HasForeignKey("TelefoneId");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Carro", b =>
                {
                    b.HasOne("SGFP.Domain.Entidades.Base.Pessoa", "Dono")
                        .WithMany()
                        .HasForeignKey("DonoId");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Cidade", b =>
                {
                    b.HasOne("SGFP.Domain.Entidades.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Endereco", b =>
                {
                    b.HasOne("SGFP.Domain.Entidades.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Estado", b =>
                {
                    b.HasOne("SGFP.Domain.Entidades.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId");
                });

            modelBuilder.Entity("SGFP.Domain.Entidades.Cliente", b =>
                {
                    b.HasOne("SGFP.Domain.Entidades.Avaliacao", "Avaliacao")
                        .WithMany()
                        .HasForeignKey("AvaliacaoId");

                    b.HasOne("SGFP.Domain.Entidades.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId");
                });
#pragma warning restore 612, 618
        }
    }
}
